{
  "name": "dhedge-v2",
  "version": "1.0.0",
  "description": "dHEDGE ovm smart contracts",
  "main": "hardhat-config.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "lint": "solhint \"contracts/**/*.sol\" && eslint . --max-warnings=0",
    "lint:sol": "solhint \"contracts/**/*.sol\"",
    "lint:fix": "solhint \"contracts/**/*.sol\" && eslint . --fix",
    "prettier": "prettier -l --write . '**/*.{js,ts,json}'",
    "fork:polygon": "hardhat node --fork $(grep POLYGON_URL .env | cut -d '=' -f2)",
    "fork:arbitrum": "hardhat node --fork $(grep ARBITRUM_URL .env | cut -d '=' -f2)",
    "fork:ovm": "hardhat node --fork $(grep OPTIMISM_URL .env | cut -d '=' -f2)",
    "fork:ovm-kovan": "hardhat node --fork $(grep KOVAN_OPTIMISM_URL .env | cut -d '=' -f2)",
    "fork:ovm-goerli": "hardhat node --fork $(grep GOERLI_OPTIMISM_URL .env | cut -d '=' -f2)",
    "compile": "hardhat compile",
    "test:unit": "hardhat test test/unit/*Test.* test/unit/**/*Test.* --network hardhat",
    "coverage": "node --max-old-space-size=4096 ./node_modules/.bin/hardhat coverage --network hardhat",
    "coverage:unit": "node --max-old-space-size=4096 ./node_modules/.bin/hardhat coverage --testfiles \"test/unit/*.js\" --network hardhat",
    "deploy:mumbai": "hardhat run ./scripts/mumbai/deploy.js --network mumbai",
    "deploy:ovm:prod": "hardhat run ./scripts/ovm/deploy-ovm.ts --network ovm",
    "deploy:ovm:kovan": "hardhat run ./scripts/ovm/deploy-kovan-ovm.ts --network ovm-kovan",
    "deploy:ovm:goerli": "hardhat run ./scripts/ovm/deploy-goerli-ovm.ts --network ovm-goerli",
    "deploy:polygon:prod": "hardhat run ./scripts/polygon/deploy-prod.js --network polygon",
    "deploy:polygon:staging": "hardhat run ./scripts/polygon/deploy-staging.js --network polygon",
    "check:polygon:ownership": "npx hardhat checkConfig --specific true --ownership true --network polygon",
    "check:polygon:factory": "npx hardhat checkConfig --specific true --factory true --network polygon",
    "check:polygon:governance": "npx hardhat checkConfig --specific true --governance true --network polygon",
    "check:polygon:assets": "npx hardhat checkConfig --specific true --assets true --network polygon",
    "check:polygon:bytecode": "npx hardhat checkConfig --specific true --bytecode true --network polygon",
    "check:polygon:all": "npx hardhat checkConfig --network polygon",
    "check:staging:ownership": "npx hardhat checkConfig --environment staging --specific true --ownership true --network polygon",
    "check:staging:factory": "npx hardhat checkConfig --environment staging --specific true --factory true --network polygon",
    "check:staging:governance": "npx hardhat checkConfig --environment staging --specific true --governance true --network polygon",
    "check:staging:assets": "npx hardhat checkConfig --environment staging --specific true --assets true --network polygon",
    "check:staging:bytecode": "npx hardhat checkConfig --environment staging --specific true --bytecode true --network polygon",
    "check:staging:all": "npx hardhat checkConfig --environment staging --network polygon",
    "check:polygon:all:prod": "npx hardhat checkConfig --network polygon",
    "check:polygon:all:staging": "npm run check:polygon:all:prod -- --environment staging",
    "check:ovm:all": "npx hardhat checkConfig --network ovm",
    "doc:gen": "solidity-docgen --solc-module solc-0.7 -t templates",
    "verify:polygon": "hardhat explorerVerify --network polygon",
    "verify:ovm": "hardhat explorerVerify --network ovm",
    "dynamicbonds:polygon:getconfig": "npx hardhat dynamicBonds --get-config true --production true --network polygon",
    "dynamicbonds:polygon:updateterms": "npx hardhat dynamicBonds --update-terms true --production true --network polygon",
    "compile-types": "npx hardhat --config hardhat.config-compile.ts typechain && npx hardhat export-abi",
    "postinstall": "npm run compile-types",
    "prepare": "husky install"
  },
  "author": "dHEDGE Team",
  "license": "ISC",
  "devDependencies": {
    "@gnosis.pm/mock-contract": "github:gnosis/mock-contract#solidity_0.7",
    "@nomiclabs/hardhat-ethers": "^2.0.2",
    "@nomiclabs/hardhat-waffle": "^2.0.1",
    "@openzeppelin/hardhat-upgrades": "1.17.0",
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/github": "^8.0.5",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@typechain/ethers-v5": "^8.0.5",
    "@typechain/hardhat": "^3.0.0",
    "@types/mocha": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^5.14.0",
    "@typescript-eslint/parser": "5.14.0",
    "chai": "^4.3.4",
    "chai-almost": "^1.0.1",
    "cross-env": "^7.0.3",
    "eslint": "8.10.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-no-only-tests": "^3.0.0",
    "eslint-plugin-prettier": "^4.0.0",
    "ethereum-waffle": "^3.3.0",
    "ethers": "5.6.1",
    "hardhat": "2.11.2",
    "hardhat-abi-exporter": "^2.2.1",
    "hardhat-contract-sizer": "^2.6.1",
    "hardhat-gas-reporter": "^1.0.4",
    "husky": "^8.0.1",
    "lint-staged": "^12.4.1",
    "prettier": "^2.5.1",
    "prettier-plugin-solidity": "^1.0.0-beta.19",
    "semantic-release": "19.0.3",
    "solc-0.7": "npm:solc@^0.7.6",
    "solhint": "^3.3.6",
    "solidity-coverage": "^0.7.16",
    "ts-generator": "^0.1.1",
    "ts-node": "^10.3.0",
    "typechain": "^6.0.5",
    "typescript": "4.3.5"
  },
  "resolutions": {
    "**/ethers": "5.6.1"
  },
  "dependencies": {
    "@chainlink/contracts": "^0.1.4",
    "@defi-wonderland/smock": "^2.3.0",
    "@gnosis.pm/safe-core-sdk": "^0.3.1",
    "@gnosis.pm/safe-ethers-adapters": "^0.1.0-alpha.3",
    "@nomiclabs/hardhat-etherscan": "^3.1.0",
    "@lyrafinance/protocol": "^0.1.2-alpha",
    "@openzeppelin/contracts": "3.4.2-solc-0.7",
    "@openzeppelin/contracts-upgradeable": "3.4.2-solc-0.7",
    "@uniswap/lib": "^4.0.1-alpha",
    "@uniswap/v3-core": "^1.0.0",
    "@uniswap/v3-periphery": "^1.1.1",
    "csv-stringify": "^5.6.2",
    "csvtojson": "^2.0.10",
    "decimal.js": "^10.3.1",
    "dotenv": "^8.2.0",
    "hardhat-dependency-compiler": "^1.1.2",
    "solidity-docgen": "^0.5.13"
  },
  "lint-staged": {
    "*.sol": [
      "solhint -w 0",
      "prettier --write"
    ],
    "*.{ts,js}": [
      "prettier --write"
    ],
    "*.ts": "eslint --max-warnings=0",
    "*.js": "eslint --cache --fix"
  }
}
