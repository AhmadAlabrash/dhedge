name: OVM Integration Tests

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  check_flags:
    name: Check flags
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.get_commit_message.outputs.headCommitMsg }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_commit_message
        run: echo "::set-output name=headCommitMsg::$(git show -s --format=%s)"

  ovm-integration1:
    name: OIT 1 - Synthetix
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') || contains(needs.check_flags.outputs.message, '[run-synthetix]') }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Hit node_modules cache
        uses: actions/cache@v3
        id: node-cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-v2-
      - name: Install dependencies
        run: npm ci
        if: steps.node-cache.outputs.cache-hit != 'true'
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          npx hardhat node --config hardhat.config-compile.ts --fork $ALCHEMY_URL &
      - name: Hardhat compile TypeChain
        run: npx hardhat --config hardhat.config-compile.ts typechain
      - name: Hardhat compile
        run: npx hardhat compile

      - name: SynthetixPerpsV2Test
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/synthetixPerpsV2/*.ts --network localhost

      - name: SynthetixV3Test
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/synthetixV3/*.ts --network localhost

      - name: SynthetixTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/SynthetixTest.ts --network localhost

      - name: SynthPriceAggregatorTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/SynthPriceAggregatorTest.ts --network localhost

      - name: SynthRedemeerTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/SynthRedemeerTest.ts --network localhost

  ovm-integration2:
    name: OIT 2 - Aave V3, Arrakis, Velodrome
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Hit node_modules cache
        uses: actions/cache@v3
        id: node-cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-v2-
      - name: Install dependencies
        run: npm ci
        if: steps.node-cache.outputs.cache-hit != 'true'
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          npx hardhat node --config hardhat.config-compile.ts --fork $ALCHEMY_URL &
      - name: Hardhat compile TypeChain
        run: npx hardhat --config hardhat.config-compile.ts typechain
      - name: Hardhat compile
        run: npx hardhat compile

      - name: AaveV3Test
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/aaveV3/AaveV3Test.ts --network localhost

      - name: AaveV3TestWithWETH
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/aaveV3/AaveV3TestWithWETH.ts --network localhost

      - name: ArrakisTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/arrakis/*.ts --network localhost

      - name: Velodrome V1 & V2
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/velodrome/*.ts --network localhost

      - name: DhedgeVeloUniV2RouterTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/DhedgeVeloUniV2RouterTest.ts --network localhost

  ovm-integration3:
    name: OIT 3 - EasySwapper
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') || contains(needs.check_flags.outputs.message, '[run-easy-swapper]') }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Hit node_modules cache
        uses: actions/cache@v3
        id: node-cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-v2-
      - name: Install dependencies
        run: npm ci
        if: steps.node-cache.outputs.cache-hit != 'true'
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          npx hardhat node --config hardhat.config-compile.ts --fork $ALCHEMY_URL &
      - name: Hardhat compile TypeChain
        run: npx hardhat --config hardhat.config-compile.ts typechain
      - name: Hardhat compile
        run: npx hardhat compile

      - name: DhedgeEasySwapperTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/DhedgeEasySwapperTest.ts --network localhost

  ovm-integration4:
    name: OIT 4 - PoolTokenSwapper, Uniswap V3, ZeroEx
    runs-on: ubuntu-latest
    needs: check_flags
    if: ${{ contains(needs.check_flags.outputs.message, '[run-integration]') || contains(needs.check_flags.outputs.message, '[run-ovm]') }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Hit node_modules cache
        uses: actions/cache@v3
        id: node-cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-v2-
      - name: Install dependencies
        run: npm ci
        if: steps.node-cache.outputs.cache-hit != 'true'
      - name: Run OVM fork in background
        env:
          ALCHEMY_URL: ${{ secrets.OVM_ALCHEMY_URL_INTEGRATION_TEST }}
        run: |
          npx hardhat node --config hardhat.config-compile.ts --fork $ALCHEMY_URL &
      - name: Hardhat compile TypeChain
        run: npx hardhat --config hardhat.config-compile.ts typechain
      - name: Hardhat compile
        run: npx hardhat compile

      - name: PoolTokenSwapperTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/poolTokenSwapper/*.ts --network localhost

      - name: UniswapV3AssetGuardTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/uniswapV3/UniswapV3AssetGuardTest.ts --network localhost

      - name: UniswapV3NonfungiblePositionGuardTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/uniswapV3/UniswapV3NonfungiblePositionGuardTest.ts --network localhost

      - name: UniswapV3PriceLibraryTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/uniswapV3/UniswapV3PriceLibraryTest.ts --network localhost

      - name: UniswapV3SwapRouterTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/uniswapV3/UniswapV3SwapRouterTest.ts --network localhost

      - name: UniV3TWAPAggregatorTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/uniswapV3/UniV3TWAPAggregatorTest.ts --network localhost

      - name: ZeroExSwapsTest
        if: always()
        run: |
          npx hardhat test ./test/integration/ovm/zeroEx/ZeroExSwapsTest.ts --network localhost
